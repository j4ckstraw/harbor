// Code generated by go-swagger; DO NOT EDIT.

package statistic

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/goharbor/harbor/src/server/v2.0/models"
)

// GetStatisticOKCode is the HTTP code returned for type GetStatisticOK
const GetStatisticOKCode int = 200

/*GetStatisticOK The statistic information

swagger:response getStatisticOK
*/
type GetStatisticOK struct {

	/*
	  In: Body
	*/
	Payload *models.Statistic `json:"body,omitempty"`
}

// NewGetStatisticOK creates GetStatisticOK with default headers values
func NewGetStatisticOK() *GetStatisticOK {

	return &GetStatisticOK{}
}

// WithPayload adds the payload to the get statistic o k response
func (o *GetStatisticOK) WithPayload(payload *models.Statistic) *GetStatisticOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get statistic o k response
func (o *GetStatisticOK) SetPayload(payload *models.Statistic) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetStatisticOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetStatisticUnauthorizedCode is the HTTP code returned for type GetStatisticUnauthorized
const GetStatisticUnauthorizedCode int = 401

/*GetStatisticUnauthorized Unauthorized

swagger:response getStatisticUnauthorized
*/
type GetStatisticUnauthorized struct {
	/*The ID of the corresponding request for the response

	 */
	XRequestID string `json:"X-Request-Id"`

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewGetStatisticUnauthorized creates GetStatisticUnauthorized with default headers values
func NewGetStatisticUnauthorized() *GetStatisticUnauthorized {

	return &GetStatisticUnauthorized{}
}

// WithXRequestID adds the xRequestId to the get statistic unauthorized response
func (o *GetStatisticUnauthorized) WithXRequestID(xRequestID string) *GetStatisticUnauthorized {
	o.XRequestID = xRequestID
	return o
}

// SetXRequestID sets the xRequestId to the get statistic unauthorized response
func (o *GetStatisticUnauthorized) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WithPayload adds the payload to the get statistic unauthorized response
func (o *GetStatisticUnauthorized) WithPayload(payload *models.Errors) *GetStatisticUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get statistic unauthorized response
func (o *GetStatisticUnauthorized) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetStatisticUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Request-Id

	xRequestID := o.XRequestID
	if xRequestID != "" {
		rw.Header().Set("X-Request-Id", xRequestID)
	}

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetStatisticInternalServerErrorCode is the HTTP code returned for type GetStatisticInternalServerError
const GetStatisticInternalServerErrorCode int = 500

/*GetStatisticInternalServerError Internal server error

swagger:response getStatisticInternalServerError
*/
type GetStatisticInternalServerError struct {
	/*The ID of the corresponding request for the response

	 */
	XRequestID string `json:"X-Request-Id"`

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewGetStatisticInternalServerError creates GetStatisticInternalServerError with default headers values
func NewGetStatisticInternalServerError() *GetStatisticInternalServerError {

	return &GetStatisticInternalServerError{}
}

// WithXRequestID adds the xRequestId to the get statistic internal server error response
func (o *GetStatisticInternalServerError) WithXRequestID(xRequestID string) *GetStatisticInternalServerError {
	o.XRequestID = xRequestID
	return o
}

// SetXRequestID sets the xRequestId to the get statistic internal server error response
func (o *GetStatisticInternalServerError) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WithPayload adds the payload to the get statistic internal server error response
func (o *GetStatisticInternalServerError) WithPayload(payload *models.Errors) *GetStatisticInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get statistic internal server error response
func (o *GetStatisticInternalServerError) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetStatisticInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Request-Id

	xRequestID := o.XRequestID
	if xRequestID != "" {
		rw.Header().Set("X-Request-Id", xRequestID)
	}

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
