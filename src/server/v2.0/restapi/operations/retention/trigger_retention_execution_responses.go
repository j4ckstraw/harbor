// Code generated by go-swagger; DO NOT EDIT.

package retention

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/goharbor/harbor/src/server/v2.0/models"
)

// TriggerRetentionExecutionOKCode is the HTTP code returned for type TriggerRetentionExecutionOK
const TriggerRetentionExecutionOKCode int = 200

/*TriggerRetentionExecutionOK Trigger a Retention job successfully.

swagger:response triggerRetentionExecutionOK
*/
type TriggerRetentionExecutionOK struct {
}

// NewTriggerRetentionExecutionOK creates TriggerRetentionExecutionOK with default headers values
func NewTriggerRetentionExecutionOK() *TriggerRetentionExecutionOK {

	return &TriggerRetentionExecutionOK{}
}

// WriteResponse to the client
func (o *TriggerRetentionExecutionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) // Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// TriggerRetentionExecutionCreatedCode is the HTTP code returned for type TriggerRetentionExecutionCreated
const TriggerRetentionExecutionCreatedCode int = 201

/*TriggerRetentionExecutionCreated Created

swagger:response triggerRetentionExecutionCreated
*/
type TriggerRetentionExecutionCreated struct {
	/*The location of the resource

	 */
	Location string `json:"Location"`
	/*The ID of the corresponding request for the response

	 */
	XRequestID string `json:"X-Request-Id"`
}

// NewTriggerRetentionExecutionCreated creates TriggerRetentionExecutionCreated with default headers values
func NewTriggerRetentionExecutionCreated() *TriggerRetentionExecutionCreated {

	return &TriggerRetentionExecutionCreated{}
}

// WithLocation adds the location to the trigger retention execution created response
func (o *TriggerRetentionExecutionCreated) WithLocation(location string) *TriggerRetentionExecutionCreated {
	o.Location = location
	return o
}

// SetLocation sets the location to the trigger retention execution created response
func (o *TriggerRetentionExecutionCreated) SetLocation(location string) {
	o.Location = location
}

// WithXRequestID adds the xRequestId to the trigger retention execution created response
func (o *TriggerRetentionExecutionCreated) WithXRequestID(xRequestID string) *TriggerRetentionExecutionCreated {
	o.XRequestID = xRequestID
	return o
}

// SetXRequestID sets the xRequestId to the trigger retention execution created response
func (o *TriggerRetentionExecutionCreated) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WriteResponse to the client
func (o *TriggerRetentionExecutionCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Location

	location := o.Location
	if location != "" {
		rw.Header().Set("Location", location)
	}

	// response header X-Request-Id

	xRequestID := o.XRequestID
	if xRequestID != "" {
		rw.Header().Set("X-Request-Id", xRequestID)
	}

	rw.Header().Del(runtime.HeaderContentType) // Remove Content-Type on empty responses

	rw.WriteHeader(201)
}

// TriggerRetentionExecutionUnauthorizedCode is the HTTP code returned for type TriggerRetentionExecutionUnauthorized
const TriggerRetentionExecutionUnauthorizedCode int = 401

/*TriggerRetentionExecutionUnauthorized Unauthorized

swagger:response triggerRetentionExecutionUnauthorized
*/
type TriggerRetentionExecutionUnauthorized struct {
	/*The ID of the corresponding request for the response

	 */
	XRequestID string `json:"X-Request-Id"`

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewTriggerRetentionExecutionUnauthorized creates TriggerRetentionExecutionUnauthorized with default headers values
func NewTriggerRetentionExecutionUnauthorized() *TriggerRetentionExecutionUnauthorized {

	return &TriggerRetentionExecutionUnauthorized{}
}

// WithXRequestID adds the xRequestId to the trigger retention execution unauthorized response
func (o *TriggerRetentionExecutionUnauthorized) WithXRequestID(xRequestID string) *TriggerRetentionExecutionUnauthorized {
	o.XRequestID = xRequestID
	return o
}

// SetXRequestID sets the xRequestId to the trigger retention execution unauthorized response
func (o *TriggerRetentionExecutionUnauthorized) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WithPayload adds the payload to the trigger retention execution unauthorized response
func (o *TriggerRetentionExecutionUnauthorized) WithPayload(payload *models.Errors) *TriggerRetentionExecutionUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the trigger retention execution unauthorized response
func (o *TriggerRetentionExecutionUnauthorized) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TriggerRetentionExecutionUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Request-Id

	xRequestID := o.XRequestID
	if xRequestID != "" {
		rw.Header().Set("X-Request-Id", xRequestID)
	}

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// TriggerRetentionExecutionForbiddenCode is the HTTP code returned for type TriggerRetentionExecutionForbidden
const TriggerRetentionExecutionForbiddenCode int = 403

/*TriggerRetentionExecutionForbidden Forbidden

swagger:response triggerRetentionExecutionForbidden
*/
type TriggerRetentionExecutionForbidden struct {
	/*The ID of the corresponding request for the response

	 */
	XRequestID string `json:"X-Request-Id"`

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewTriggerRetentionExecutionForbidden creates TriggerRetentionExecutionForbidden with default headers values
func NewTriggerRetentionExecutionForbidden() *TriggerRetentionExecutionForbidden {

	return &TriggerRetentionExecutionForbidden{}
}

// WithXRequestID adds the xRequestId to the trigger retention execution forbidden response
func (o *TriggerRetentionExecutionForbidden) WithXRequestID(xRequestID string) *TriggerRetentionExecutionForbidden {
	o.XRequestID = xRequestID
	return o
}

// SetXRequestID sets the xRequestId to the trigger retention execution forbidden response
func (o *TriggerRetentionExecutionForbidden) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WithPayload adds the payload to the trigger retention execution forbidden response
func (o *TriggerRetentionExecutionForbidden) WithPayload(payload *models.Errors) *TriggerRetentionExecutionForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the trigger retention execution forbidden response
func (o *TriggerRetentionExecutionForbidden) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TriggerRetentionExecutionForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Request-Id

	xRequestID := o.XRequestID
	if xRequestID != "" {
		rw.Header().Set("X-Request-Id", xRequestID)
	}

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// TriggerRetentionExecutionInternalServerErrorCode is the HTTP code returned for type TriggerRetentionExecutionInternalServerError
const TriggerRetentionExecutionInternalServerErrorCode int = 500

/*TriggerRetentionExecutionInternalServerError Internal server error

swagger:response triggerRetentionExecutionInternalServerError
*/
type TriggerRetentionExecutionInternalServerError struct {
	/*The ID of the corresponding request for the response

	 */
	XRequestID string `json:"X-Request-Id"`

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewTriggerRetentionExecutionInternalServerError creates TriggerRetentionExecutionInternalServerError with default headers values
func NewTriggerRetentionExecutionInternalServerError() *TriggerRetentionExecutionInternalServerError {

	return &TriggerRetentionExecutionInternalServerError{}
}

// WithXRequestID adds the xRequestId to the trigger retention execution internal server error response
func (o *TriggerRetentionExecutionInternalServerError) WithXRequestID(xRequestID string) *TriggerRetentionExecutionInternalServerError {
	o.XRequestID = xRequestID
	return o
}

// SetXRequestID sets the xRequestId to the trigger retention execution internal server error response
func (o *TriggerRetentionExecutionInternalServerError) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WithPayload adds the payload to the trigger retention execution internal server error response
func (o *TriggerRetentionExecutionInternalServerError) WithPayload(payload *models.Errors) *TriggerRetentionExecutionInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the trigger retention execution internal server error response
func (o *TriggerRetentionExecutionInternalServerError) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TriggerRetentionExecutionInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Request-Id

	xRequestID := o.XRequestID
	if xRequestID != "" {
		rw.Header().Set("X-Request-Id", xRequestID)
	}

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
