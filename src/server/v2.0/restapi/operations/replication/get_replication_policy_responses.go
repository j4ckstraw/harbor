// Code generated by go-swagger; DO NOT EDIT.

package replication

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/goharbor/harbor/src/server/v2.0/models"
)

// GetReplicationPolicyOKCode is the HTTP code returned for type GetReplicationPolicyOK
const GetReplicationPolicyOKCode int = 200

/*GetReplicationPolicyOK Success

swagger:response getReplicationPolicyOK
*/
type GetReplicationPolicyOK struct {

	/*
	  In: Body
	*/
	Payload *models.ReplicationPolicy `json:"body,omitempty"`
}

// NewGetReplicationPolicyOK creates GetReplicationPolicyOK with default headers values
func NewGetReplicationPolicyOK() *GetReplicationPolicyOK {

	return &GetReplicationPolicyOK{}
}

// WithPayload adds the payload to the get replication policy o k response
func (o *GetReplicationPolicyOK) WithPayload(payload *models.ReplicationPolicy) *GetReplicationPolicyOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get replication policy o k response
func (o *GetReplicationPolicyOK) SetPayload(payload *models.ReplicationPolicy) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetReplicationPolicyOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetReplicationPolicyUnauthorizedCode is the HTTP code returned for type GetReplicationPolicyUnauthorized
const GetReplicationPolicyUnauthorizedCode int = 401

/*GetReplicationPolicyUnauthorized Unauthorized

swagger:response getReplicationPolicyUnauthorized
*/
type GetReplicationPolicyUnauthorized struct {
	/*The ID of the corresponding request for the response

	 */
	XRequestID string `json:"X-Request-Id"`

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewGetReplicationPolicyUnauthorized creates GetReplicationPolicyUnauthorized with default headers values
func NewGetReplicationPolicyUnauthorized() *GetReplicationPolicyUnauthorized {

	return &GetReplicationPolicyUnauthorized{}
}

// WithXRequestID adds the xRequestId to the get replication policy unauthorized response
func (o *GetReplicationPolicyUnauthorized) WithXRequestID(xRequestID string) *GetReplicationPolicyUnauthorized {
	o.XRequestID = xRequestID
	return o
}

// SetXRequestID sets the xRequestId to the get replication policy unauthorized response
func (o *GetReplicationPolicyUnauthorized) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WithPayload adds the payload to the get replication policy unauthorized response
func (o *GetReplicationPolicyUnauthorized) WithPayload(payload *models.Errors) *GetReplicationPolicyUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get replication policy unauthorized response
func (o *GetReplicationPolicyUnauthorized) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetReplicationPolicyUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Request-Id

	xRequestID := o.XRequestID
	if xRequestID != "" {
		rw.Header().Set("X-Request-Id", xRequestID)
	}

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetReplicationPolicyForbiddenCode is the HTTP code returned for type GetReplicationPolicyForbidden
const GetReplicationPolicyForbiddenCode int = 403

/*GetReplicationPolicyForbidden Forbidden

swagger:response getReplicationPolicyForbidden
*/
type GetReplicationPolicyForbidden struct {
	/*The ID of the corresponding request for the response

	 */
	XRequestID string `json:"X-Request-Id"`

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewGetReplicationPolicyForbidden creates GetReplicationPolicyForbidden with default headers values
func NewGetReplicationPolicyForbidden() *GetReplicationPolicyForbidden {

	return &GetReplicationPolicyForbidden{}
}

// WithXRequestID adds the xRequestId to the get replication policy forbidden response
func (o *GetReplicationPolicyForbidden) WithXRequestID(xRequestID string) *GetReplicationPolicyForbidden {
	o.XRequestID = xRequestID
	return o
}

// SetXRequestID sets the xRequestId to the get replication policy forbidden response
func (o *GetReplicationPolicyForbidden) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WithPayload adds the payload to the get replication policy forbidden response
func (o *GetReplicationPolicyForbidden) WithPayload(payload *models.Errors) *GetReplicationPolicyForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get replication policy forbidden response
func (o *GetReplicationPolicyForbidden) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetReplicationPolicyForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Request-Id

	xRequestID := o.XRequestID
	if xRequestID != "" {
		rw.Header().Set("X-Request-Id", xRequestID)
	}

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetReplicationPolicyInternalServerErrorCode is the HTTP code returned for type GetReplicationPolicyInternalServerError
const GetReplicationPolicyInternalServerErrorCode int = 500

/*GetReplicationPolicyInternalServerError Internal server error

swagger:response getReplicationPolicyInternalServerError
*/
type GetReplicationPolicyInternalServerError struct {
	/*The ID of the corresponding request for the response

	 */
	XRequestID string `json:"X-Request-Id"`

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewGetReplicationPolicyInternalServerError creates GetReplicationPolicyInternalServerError with default headers values
func NewGetReplicationPolicyInternalServerError() *GetReplicationPolicyInternalServerError {

	return &GetReplicationPolicyInternalServerError{}
}

// WithXRequestID adds the xRequestId to the get replication policy internal server error response
func (o *GetReplicationPolicyInternalServerError) WithXRequestID(xRequestID string) *GetReplicationPolicyInternalServerError {
	o.XRequestID = xRequestID
	return o
}

// SetXRequestID sets the xRequestId to the get replication policy internal server error response
func (o *GetReplicationPolicyInternalServerError) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WithPayload adds the payload to the get replication policy internal server error response
func (o *GetReplicationPolicyInternalServerError) WithPayload(payload *models.Errors) *GetReplicationPolicyInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get replication policy internal server error response
func (o *GetReplicationPolicyInternalServerError) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetReplicationPolicyInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Request-Id

	xRequestID := o.XRequestID
	if xRequestID != "" {
		rw.Header().Set("X-Request-Id", xRequestID)
	}

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
