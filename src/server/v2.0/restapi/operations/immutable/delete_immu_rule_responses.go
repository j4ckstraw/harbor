// Code generated by go-swagger; DO NOT EDIT.

package immutable

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/goharbor/harbor/src/server/v2.0/models"
)

// DeleteImmuRuleOKCode is the HTTP code returned for type DeleteImmuRuleOK
const DeleteImmuRuleOKCode int = 200

/*DeleteImmuRuleOK Success

swagger:response deleteImmuRuleOK
*/
type DeleteImmuRuleOK struct {
	/*The ID of the corresponding request for the response

	 */
	XRequestID string `json:"X-Request-Id"`
}

// NewDeleteImmuRuleOK creates DeleteImmuRuleOK with default headers values
func NewDeleteImmuRuleOK() *DeleteImmuRuleOK {

	return &DeleteImmuRuleOK{}
}

// WithXRequestID adds the xRequestId to the delete immu rule o k response
func (o *DeleteImmuRuleOK) WithXRequestID(xRequestID string) *DeleteImmuRuleOK {
	o.XRequestID = xRequestID
	return o
}

// SetXRequestID sets the xRequestId to the delete immu rule o k response
func (o *DeleteImmuRuleOK) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WriteResponse to the client
func (o *DeleteImmuRuleOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Request-Id

	xRequestID := o.XRequestID
	if xRequestID != "" {
		rw.Header().Set("X-Request-Id", xRequestID)
	}

	rw.Header().Del(runtime.HeaderContentType) // Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// DeleteImmuRuleBadRequestCode is the HTTP code returned for type DeleteImmuRuleBadRequest
const DeleteImmuRuleBadRequestCode int = 400

/*DeleteImmuRuleBadRequest Bad request

swagger:response deleteImmuRuleBadRequest
*/
type DeleteImmuRuleBadRequest struct {
	/*The ID of the corresponding request for the response

	 */
	XRequestID string `json:"X-Request-Id"`

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewDeleteImmuRuleBadRequest creates DeleteImmuRuleBadRequest with default headers values
func NewDeleteImmuRuleBadRequest() *DeleteImmuRuleBadRequest {

	return &DeleteImmuRuleBadRequest{}
}

// WithXRequestID adds the xRequestId to the delete immu rule bad request response
func (o *DeleteImmuRuleBadRequest) WithXRequestID(xRequestID string) *DeleteImmuRuleBadRequest {
	o.XRequestID = xRequestID
	return o
}

// SetXRequestID sets the xRequestId to the delete immu rule bad request response
func (o *DeleteImmuRuleBadRequest) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WithPayload adds the payload to the delete immu rule bad request response
func (o *DeleteImmuRuleBadRequest) WithPayload(payload *models.Errors) *DeleteImmuRuleBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete immu rule bad request response
func (o *DeleteImmuRuleBadRequest) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteImmuRuleBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Request-Id

	xRequestID := o.XRequestID
	if xRequestID != "" {
		rw.Header().Set("X-Request-Id", xRequestID)
	}

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteImmuRuleUnauthorizedCode is the HTTP code returned for type DeleteImmuRuleUnauthorized
const DeleteImmuRuleUnauthorizedCode int = 401

/*DeleteImmuRuleUnauthorized Unauthorized

swagger:response deleteImmuRuleUnauthorized
*/
type DeleteImmuRuleUnauthorized struct {
	/*The ID of the corresponding request for the response

	 */
	XRequestID string `json:"X-Request-Id"`

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewDeleteImmuRuleUnauthorized creates DeleteImmuRuleUnauthorized with default headers values
func NewDeleteImmuRuleUnauthorized() *DeleteImmuRuleUnauthorized {

	return &DeleteImmuRuleUnauthorized{}
}

// WithXRequestID adds the xRequestId to the delete immu rule unauthorized response
func (o *DeleteImmuRuleUnauthorized) WithXRequestID(xRequestID string) *DeleteImmuRuleUnauthorized {
	o.XRequestID = xRequestID
	return o
}

// SetXRequestID sets the xRequestId to the delete immu rule unauthorized response
func (o *DeleteImmuRuleUnauthorized) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WithPayload adds the payload to the delete immu rule unauthorized response
func (o *DeleteImmuRuleUnauthorized) WithPayload(payload *models.Errors) *DeleteImmuRuleUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete immu rule unauthorized response
func (o *DeleteImmuRuleUnauthorized) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteImmuRuleUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Request-Id

	xRequestID := o.XRequestID
	if xRequestID != "" {
		rw.Header().Set("X-Request-Id", xRequestID)
	}

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteImmuRuleForbiddenCode is the HTTP code returned for type DeleteImmuRuleForbidden
const DeleteImmuRuleForbiddenCode int = 403

/*DeleteImmuRuleForbidden Forbidden

swagger:response deleteImmuRuleForbidden
*/
type DeleteImmuRuleForbidden struct {
	/*The ID of the corresponding request for the response

	 */
	XRequestID string `json:"X-Request-Id"`

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewDeleteImmuRuleForbidden creates DeleteImmuRuleForbidden with default headers values
func NewDeleteImmuRuleForbidden() *DeleteImmuRuleForbidden {

	return &DeleteImmuRuleForbidden{}
}

// WithXRequestID adds the xRequestId to the delete immu rule forbidden response
func (o *DeleteImmuRuleForbidden) WithXRequestID(xRequestID string) *DeleteImmuRuleForbidden {
	o.XRequestID = xRequestID
	return o
}

// SetXRequestID sets the xRequestId to the delete immu rule forbidden response
func (o *DeleteImmuRuleForbidden) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WithPayload adds the payload to the delete immu rule forbidden response
func (o *DeleteImmuRuleForbidden) WithPayload(payload *models.Errors) *DeleteImmuRuleForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete immu rule forbidden response
func (o *DeleteImmuRuleForbidden) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteImmuRuleForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Request-Id

	xRequestID := o.XRequestID
	if xRequestID != "" {
		rw.Header().Set("X-Request-Id", xRequestID)
	}

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteImmuRuleInternalServerErrorCode is the HTTP code returned for type DeleteImmuRuleInternalServerError
const DeleteImmuRuleInternalServerErrorCode int = 500

/*DeleteImmuRuleInternalServerError Internal server error

swagger:response deleteImmuRuleInternalServerError
*/
type DeleteImmuRuleInternalServerError struct {
	/*The ID of the corresponding request for the response

	 */
	XRequestID string `json:"X-Request-Id"`

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewDeleteImmuRuleInternalServerError creates DeleteImmuRuleInternalServerError with default headers values
func NewDeleteImmuRuleInternalServerError() *DeleteImmuRuleInternalServerError {

	return &DeleteImmuRuleInternalServerError{}
}

// WithXRequestID adds the xRequestId to the delete immu rule internal server error response
func (o *DeleteImmuRuleInternalServerError) WithXRequestID(xRequestID string) *DeleteImmuRuleInternalServerError {
	o.XRequestID = xRequestID
	return o
}

// SetXRequestID sets the xRequestId to the delete immu rule internal server error response
func (o *DeleteImmuRuleInternalServerError) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WithPayload adds the payload to the delete immu rule internal server error response
func (o *DeleteImmuRuleInternalServerError) WithPayload(payload *models.Errors) *DeleteImmuRuleInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete immu rule internal server error response
func (o *DeleteImmuRuleInternalServerError) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteImmuRuleInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Request-Id

	xRequestID := o.XRequestID
	if xRequestID != "" {
		rw.Header().Set("X-Request-Id", xRequestID)
	}

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
