// Code generated by go-swagger; DO NOT EDIT.

package member

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/goharbor/harbor/src/server/v2.0/models"
)

// UpdateProjectMemberOKCode is the HTTP code returned for type UpdateProjectMemberOK
const UpdateProjectMemberOKCode int = 200

/*UpdateProjectMemberOK Success

swagger:response updateProjectMemberOK
*/
type UpdateProjectMemberOK struct {
	/*The ID of the corresponding request for the response

	 */
	XRequestID string `json:"X-Request-Id"`
}

// NewUpdateProjectMemberOK creates UpdateProjectMemberOK with default headers values
func NewUpdateProjectMemberOK() *UpdateProjectMemberOK {

	return &UpdateProjectMemberOK{}
}

// WithXRequestID adds the xRequestId to the update project member o k response
func (o *UpdateProjectMemberOK) WithXRequestID(xRequestID string) *UpdateProjectMemberOK {
	o.XRequestID = xRequestID
	return o
}

// SetXRequestID sets the xRequestId to the update project member o k response
func (o *UpdateProjectMemberOK) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WriteResponse to the client
func (o *UpdateProjectMemberOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Request-Id

	xRequestID := o.XRequestID
	if xRequestID != "" {
		rw.Header().Set("X-Request-Id", xRequestID)
	}

	rw.Header().Del(runtime.HeaderContentType) // Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// UpdateProjectMemberBadRequestCode is the HTTP code returned for type UpdateProjectMemberBadRequest
const UpdateProjectMemberBadRequestCode int = 400

/*UpdateProjectMemberBadRequest Bad request

swagger:response updateProjectMemberBadRequest
*/
type UpdateProjectMemberBadRequest struct {
	/*The ID of the corresponding request for the response

	 */
	XRequestID string `json:"X-Request-Id"`

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewUpdateProjectMemberBadRequest creates UpdateProjectMemberBadRequest with default headers values
func NewUpdateProjectMemberBadRequest() *UpdateProjectMemberBadRequest {

	return &UpdateProjectMemberBadRequest{}
}

// WithXRequestID adds the xRequestId to the update project member bad request response
func (o *UpdateProjectMemberBadRequest) WithXRequestID(xRequestID string) *UpdateProjectMemberBadRequest {
	o.XRequestID = xRequestID
	return o
}

// SetXRequestID sets the xRequestId to the update project member bad request response
func (o *UpdateProjectMemberBadRequest) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WithPayload adds the payload to the update project member bad request response
func (o *UpdateProjectMemberBadRequest) WithPayload(payload *models.Errors) *UpdateProjectMemberBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update project member bad request response
func (o *UpdateProjectMemberBadRequest) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateProjectMemberBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Request-Id

	xRequestID := o.XRequestID
	if xRequestID != "" {
		rw.Header().Set("X-Request-Id", xRequestID)
	}

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateProjectMemberUnauthorizedCode is the HTTP code returned for type UpdateProjectMemberUnauthorized
const UpdateProjectMemberUnauthorizedCode int = 401

/*UpdateProjectMemberUnauthorized Unauthorized

swagger:response updateProjectMemberUnauthorized
*/
type UpdateProjectMemberUnauthorized struct {
	/*The ID of the corresponding request for the response

	 */
	XRequestID string `json:"X-Request-Id"`

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewUpdateProjectMemberUnauthorized creates UpdateProjectMemberUnauthorized with default headers values
func NewUpdateProjectMemberUnauthorized() *UpdateProjectMemberUnauthorized {

	return &UpdateProjectMemberUnauthorized{}
}

// WithXRequestID adds the xRequestId to the update project member unauthorized response
func (o *UpdateProjectMemberUnauthorized) WithXRequestID(xRequestID string) *UpdateProjectMemberUnauthorized {
	o.XRequestID = xRequestID
	return o
}

// SetXRequestID sets the xRequestId to the update project member unauthorized response
func (o *UpdateProjectMemberUnauthorized) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WithPayload adds the payload to the update project member unauthorized response
func (o *UpdateProjectMemberUnauthorized) WithPayload(payload *models.Errors) *UpdateProjectMemberUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update project member unauthorized response
func (o *UpdateProjectMemberUnauthorized) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateProjectMemberUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Request-Id

	xRequestID := o.XRequestID
	if xRequestID != "" {
		rw.Header().Set("X-Request-Id", xRequestID)
	}

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateProjectMemberForbiddenCode is the HTTP code returned for type UpdateProjectMemberForbidden
const UpdateProjectMemberForbiddenCode int = 403

/*UpdateProjectMemberForbidden Forbidden

swagger:response updateProjectMemberForbidden
*/
type UpdateProjectMemberForbidden struct {
	/*The ID of the corresponding request for the response

	 */
	XRequestID string `json:"X-Request-Id"`

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewUpdateProjectMemberForbidden creates UpdateProjectMemberForbidden with default headers values
func NewUpdateProjectMemberForbidden() *UpdateProjectMemberForbidden {

	return &UpdateProjectMemberForbidden{}
}

// WithXRequestID adds the xRequestId to the update project member forbidden response
func (o *UpdateProjectMemberForbidden) WithXRequestID(xRequestID string) *UpdateProjectMemberForbidden {
	o.XRequestID = xRequestID
	return o
}

// SetXRequestID sets the xRequestId to the update project member forbidden response
func (o *UpdateProjectMemberForbidden) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WithPayload adds the payload to the update project member forbidden response
func (o *UpdateProjectMemberForbidden) WithPayload(payload *models.Errors) *UpdateProjectMemberForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update project member forbidden response
func (o *UpdateProjectMemberForbidden) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateProjectMemberForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Request-Id

	xRequestID := o.XRequestID
	if xRequestID != "" {
		rw.Header().Set("X-Request-Id", xRequestID)
	}

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateProjectMemberNotFoundCode is the HTTP code returned for type UpdateProjectMemberNotFound
const UpdateProjectMemberNotFoundCode int = 404

/*UpdateProjectMemberNotFound Not found

swagger:response updateProjectMemberNotFound
*/
type UpdateProjectMemberNotFound struct {
	/*The ID of the corresponding request for the response

	 */
	XRequestID string `json:"X-Request-Id"`

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewUpdateProjectMemberNotFound creates UpdateProjectMemberNotFound with default headers values
func NewUpdateProjectMemberNotFound() *UpdateProjectMemberNotFound {

	return &UpdateProjectMemberNotFound{}
}

// WithXRequestID adds the xRequestId to the update project member not found response
func (o *UpdateProjectMemberNotFound) WithXRequestID(xRequestID string) *UpdateProjectMemberNotFound {
	o.XRequestID = xRequestID
	return o
}

// SetXRequestID sets the xRequestId to the update project member not found response
func (o *UpdateProjectMemberNotFound) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WithPayload adds the payload to the update project member not found response
func (o *UpdateProjectMemberNotFound) WithPayload(payload *models.Errors) *UpdateProjectMemberNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update project member not found response
func (o *UpdateProjectMemberNotFound) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateProjectMemberNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Request-Id

	xRequestID := o.XRequestID
	if xRequestID != "" {
		rw.Header().Set("X-Request-Id", xRequestID)
	}

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateProjectMemberInternalServerErrorCode is the HTTP code returned for type UpdateProjectMemberInternalServerError
const UpdateProjectMemberInternalServerErrorCode int = 500

/*UpdateProjectMemberInternalServerError Internal server error

swagger:response updateProjectMemberInternalServerError
*/
type UpdateProjectMemberInternalServerError struct {
	/*The ID of the corresponding request for the response

	 */
	XRequestID string `json:"X-Request-Id"`

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewUpdateProjectMemberInternalServerError creates UpdateProjectMemberInternalServerError with default headers values
func NewUpdateProjectMemberInternalServerError() *UpdateProjectMemberInternalServerError {

	return &UpdateProjectMemberInternalServerError{}
}

// WithXRequestID adds the xRequestId to the update project member internal server error response
func (o *UpdateProjectMemberInternalServerError) WithXRequestID(xRequestID string) *UpdateProjectMemberInternalServerError {
	o.XRequestID = xRequestID
	return o
}

// SetXRequestID sets the xRequestId to the update project member internal server error response
func (o *UpdateProjectMemberInternalServerError) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WithPayload adds the payload to the update project member internal server error response
func (o *UpdateProjectMemberInternalServerError) WithPayload(payload *models.Errors) *UpdateProjectMemberInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update project member internal server error response
func (o *UpdateProjectMemberInternalServerError) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateProjectMemberInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Request-Id

	xRequestID := o.XRequestID
	if xRequestID != "" {
		rw.Header().Set("X-Request-Id", xRequestID)
	}

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
