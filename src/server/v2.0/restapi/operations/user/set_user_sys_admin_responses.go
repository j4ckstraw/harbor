// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/goharbor/harbor/src/server/v2.0/models"
)

// SetUserSysAdminOKCode is the HTTP code returned for type SetUserSysAdminOK
const SetUserSysAdminOKCode int = 200

/*SetUserSysAdminOK Success

swagger:response setUserSysAdminOK
*/
type SetUserSysAdminOK struct {
	/*The ID of the corresponding request for the response

	 */
	XRequestID string `json:"X-Request-Id"`
}

// NewSetUserSysAdminOK creates SetUserSysAdminOK with default headers values
func NewSetUserSysAdminOK() *SetUserSysAdminOK {

	return &SetUserSysAdminOK{}
}

// WithXRequestID adds the xRequestId to the set user sys admin o k response
func (o *SetUserSysAdminOK) WithXRequestID(xRequestID string) *SetUserSysAdminOK {
	o.XRequestID = xRequestID
	return o
}

// SetXRequestID sets the xRequestId to the set user sys admin o k response
func (o *SetUserSysAdminOK) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WriteResponse to the client
func (o *SetUserSysAdminOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Request-Id

	xRequestID := o.XRequestID
	if xRequestID != "" {
		rw.Header().Set("X-Request-Id", xRequestID)
	}

	rw.Header().Del(runtime.HeaderContentType) // Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// SetUserSysAdminUnauthorizedCode is the HTTP code returned for type SetUserSysAdminUnauthorized
const SetUserSysAdminUnauthorizedCode int = 401

/*SetUserSysAdminUnauthorized Unauthorized

swagger:response setUserSysAdminUnauthorized
*/
type SetUserSysAdminUnauthorized struct {
	/*The ID of the corresponding request for the response

	 */
	XRequestID string `json:"X-Request-Id"`

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewSetUserSysAdminUnauthorized creates SetUserSysAdminUnauthorized with default headers values
func NewSetUserSysAdminUnauthorized() *SetUserSysAdminUnauthorized {

	return &SetUserSysAdminUnauthorized{}
}

// WithXRequestID adds the xRequestId to the set user sys admin unauthorized response
func (o *SetUserSysAdminUnauthorized) WithXRequestID(xRequestID string) *SetUserSysAdminUnauthorized {
	o.XRequestID = xRequestID
	return o
}

// SetXRequestID sets the xRequestId to the set user sys admin unauthorized response
func (o *SetUserSysAdminUnauthorized) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WithPayload adds the payload to the set user sys admin unauthorized response
func (o *SetUserSysAdminUnauthorized) WithPayload(payload *models.Errors) *SetUserSysAdminUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the set user sys admin unauthorized response
func (o *SetUserSysAdminUnauthorized) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SetUserSysAdminUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Request-Id

	xRequestID := o.XRequestID
	if xRequestID != "" {
		rw.Header().Set("X-Request-Id", xRequestID)
	}

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SetUserSysAdminForbiddenCode is the HTTP code returned for type SetUserSysAdminForbidden
const SetUserSysAdminForbiddenCode int = 403

/*SetUserSysAdminForbidden Forbidden

swagger:response setUserSysAdminForbidden
*/
type SetUserSysAdminForbidden struct {
	/*The ID of the corresponding request for the response

	 */
	XRequestID string `json:"X-Request-Id"`

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewSetUserSysAdminForbidden creates SetUserSysAdminForbidden with default headers values
func NewSetUserSysAdminForbidden() *SetUserSysAdminForbidden {

	return &SetUserSysAdminForbidden{}
}

// WithXRequestID adds the xRequestId to the set user sys admin forbidden response
func (o *SetUserSysAdminForbidden) WithXRequestID(xRequestID string) *SetUserSysAdminForbidden {
	o.XRequestID = xRequestID
	return o
}

// SetXRequestID sets the xRequestId to the set user sys admin forbidden response
func (o *SetUserSysAdminForbidden) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WithPayload adds the payload to the set user sys admin forbidden response
func (o *SetUserSysAdminForbidden) WithPayload(payload *models.Errors) *SetUserSysAdminForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the set user sys admin forbidden response
func (o *SetUserSysAdminForbidden) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SetUserSysAdminForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Request-Id

	xRequestID := o.XRequestID
	if xRequestID != "" {
		rw.Header().Set("X-Request-Id", xRequestID)
	}

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SetUserSysAdminNotFoundCode is the HTTP code returned for type SetUserSysAdminNotFound
const SetUserSysAdminNotFoundCode int = 404

/*SetUserSysAdminNotFound Not found

swagger:response setUserSysAdminNotFound
*/
type SetUserSysAdminNotFound struct {
	/*The ID of the corresponding request for the response

	 */
	XRequestID string `json:"X-Request-Id"`

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewSetUserSysAdminNotFound creates SetUserSysAdminNotFound with default headers values
func NewSetUserSysAdminNotFound() *SetUserSysAdminNotFound {

	return &SetUserSysAdminNotFound{}
}

// WithXRequestID adds the xRequestId to the set user sys admin not found response
func (o *SetUserSysAdminNotFound) WithXRequestID(xRequestID string) *SetUserSysAdminNotFound {
	o.XRequestID = xRequestID
	return o
}

// SetXRequestID sets the xRequestId to the set user sys admin not found response
func (o *SetUserSysAdminNotFound) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WithPayload adds the payload to the set user sys admin not found response
func (o *SetUserSysAdminNotFound) WithPayload(payload *models.Errors) *SetUserSysAdminNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the set user sys admin not found response
func (o *SetUserSysAdminNotFound) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SetUserSysAdminNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Request-Id

	xRequestID := o.XRequestID
	if xRequestID != "" {
		rw.Header().Set("X-Request-Id", xRequestID)
	}

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SetUserSysAdminInternalServerErrorCode is the HTTP code returned for type SetUserSysAdminInternalServerError
const SetUserSysAdminInternalServerErrorCode int = 500

/*SetUserSysAdminInternalServerError Unexpected internal errors.

swagger:response setUserSysAdminInternalServerError
*/
type SetUserSysAdminInternalServerError struct {
}

// NewSetUserSysAdminInternalServerError creates SetUserSysAdminInternalServerError with default headers values
func NewSetUserSysAdminInternalServerError() *SetUserSysAdminInternalServerError {

	return &SetUserSysAdminInternalServerError{}
}

// WriteResponse to the client
func (o *SetUserSysAdminInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) // Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
