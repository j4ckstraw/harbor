// Code generated by go-swagger; DO NOT EDIT.

package systeminfo

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/goharbor/harbor/src/server/v2.0/models"
)

// GetSystemInfoOKCode is the HTTP code returned for type GetSystemInfoOK
const GetSystemInfoOKCode int = 200

/*GetSystemInfoOK Get general info successfully.

swagger:response getSystemInfoOK
*/
type GetSystemInfoOK struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralInfo `json:"body,omitempty"`
}

// NewGetSystemInfoOK creates GetSystemInfoOK with default headers values
func NewGetSystemInfoOK() *GetSystemInfoOK {

	return &GetSystemInfoOK{}
}

// WithPayload adds the payload to the get system info o k response
func (o *GetSystemInfoOK) WithPayload(payload *models.GeneralInfo) *GetSystemInfoOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get system info o k response
func (o *GetSystemInfoOK) SetPayload(payload *models.GeneralInfo) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSystemInfoOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetSystemInfoInternalServerErrorCode is the HTTP code returned for type GetSystemInfoInternalServerError
const GetSystemInfoInternalServerErrorCode int = 500

/*GetSystemInfoInternalServerError Internal server error

swagger:response getSystemInfoInternalServerError
*/
type GetSystemInfoInternalServerError struct {
	/*The ID of the corresponding request for the response

	 */
	XRequestID string `json:"X-Request-Id"`

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewGetSystemInfoInternalServerError creates GetSystemInfoInternalServerError with default headers values
func NewGetSystemInfoInternalServerError() *GetSystemInfoInternalServerError {

	return &GetSystemInfoInternalServerError{}
}

// WithXRequestID adds the xRequestId to the get system info internal server error response
func (o *GetSystemInfoInternalServerError) WithXRequestID(xRequestID string) *GetSystemInfoInternalServerError {
	o.XRequestID = xRequestID
	return o
}

// SetXRequestID sets the xRequestId to the get system info internal server error response
func (o *GetSystemInfoInternalServerError) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WithPayload adds the payload to the get system info internal server error response
func (o *GetSystemInfoInternalServerError) WithPayload(payload *models.Errors) *GetSystemInfoInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get system info internal server error response
func (o *GetSystemInfoInternalServerError) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSystemInfoInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Request-Id

	xRequestID := o.XRequestID
	if xRequestID != "" {
		rw.Header().Set("X-Request-Id", xRequestID)
	}

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
