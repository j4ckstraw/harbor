// Code generated by go-swagger; DO NOT EDIT.

package scan_all

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/goharbor/harbor/src/server/v2.0/models"
)

// GetLatestScheduledScanAllMetricsOKCode is the HTTP code returned for type GetLatestScheduledScanAllMetricsOK
const GetLatestScheduledScanAllMetricsOKCode int = 200

/*GetLatestScheduledScanAllMetricsOK OK

swagger:response getLatestScheduledScanAllMetricsOK
*/
type GetLatestScheduledScanAllMetricsOK struct {

	/*
	  In: Body
	*/
	Payload *models.Stats `json:"body,omitempty"`
}

// NewGetLatestScheduledScanAllMetricsOK creates GetLatestScheduledScanAllMetricsOK with default headers values
func NewGetLatestScheduledScanAllMetricsOK() *GetLatestScheduledScanAllMetricsOK {

	return &GetLatestScheduledScanAllMetricsOK{}
}

// WithPayload adds the payload to the get latest scheduled scan all metrics o k response
func (o *GetLatestScheduledScanAllMetricsOK) WithPayload(payload *models.Stats) *GetLatestScheduledScanAllMetricsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get latest scheduled scan all metrics o k response
func (o *GetLatestScheduledScanAllMetricsOK) SetPayload(payload *models.Stats) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetLatestScheduledScanAllMetricsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetLatestScheduledScanAllMetricsUnauthorizedCode is the HTTP code returned for type GetLatestScheduledScanAllMetricsUnauthorized
const GetLatestScheduledScanAllMetricsUnauthorizedCode int = 401

/*GetLatestScheduledScanAllMetricsUnauthorized Unauthorized

swagger:response getLatestScheduledScanAllMetricsUnauthorized
*/
type GetLatestScheduledScanAllMetricsUnauthorized struct {
	/*The ID of the corresponding request for the response

	 */
	XRequestID string `json:"X-Request-Id"`

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewGetLatestScheduledScanAllMetricsUnauthorized creates GetLatestScheduledScanAllMetricsUnauthorized with default headers values
func NewGetLatestScheduledScanAllMetricsUnauthorized() *GetLatestScheduledScanAllMetricsUnauthorized {

	return &GetLatestScheduledScanAllMetricsUnauthorized{}
}

// WithXRequestID adds the xRequestId to the get latest scheduled scan all metrics unauthorized response
func (o *GetLatestScheduledScanAllMetricsUnauthorized) WithXRequestID(xRequestID string) *GetLatestScheduledScanAllMetricsUnauthorized {
	o.XRequestID = xRequestID
	return o
}

// SetXRequestID sets the xRequestId to the get latest scheduled scan all metrics unauthorized response
func (o *GetLatestScheduledScanAllMetricsUnauthorized) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WithPayload adds the payload to the get latest scheduled scan all metrics unauthorized response
func (o *GetLatestScheduledScanAllMetricsUnauthorized) WithPayload(payload *models.Errors) *GetLatestScheduledScanAllMetricsUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get latest scheduled scan all metrics unauthorized response
func (o *GetLatestScheduledScanAllMetricsUnauthorized) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetLatestScheduledScanAllMetricsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Request-Id

	xRequestID := o.XRequestID
	if xRequestID != "" {
		rw.Header().Set("X-Request-Id", xRequestID)
	}

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetLatestScheduledScanAllMetricsForbiddenCode is the HTTP code returned for type GetLatestScheduledScanAllMetricsForbidden
const GetLatestScheduledScanAllMetricsForbiddenCode int = 403

/*GetLatestScheduledScanAllMetricsForbidden Forbidden

swagger:response getLatestScheduledScanAllMetricsForbidden
*/
type GetLatestScheduledScanAllMetricsForbidden struct {
	/*The ID of the corresponding request for the response

	 */
	XRequestID string `json:"X-Request-Id"`

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewGetLatestScheduledScanAllMetricsForbidden creates GetLatestScheduledScanAllMetricsForbidden with default headers values
func NewGetLatestScheduledScanAllMetricsForbidden() *GetLatestScheduledScanAllMetricsForbidden {

	return &GetLatestScheduledScanAllMetricsForbidden{}
}

// WithXRequestID adds the xRequestId to the get latest scheduled scan all metrics forbidden response
func (o *GetLatestScheduledScanAllMetricsForbidden) WithXRequestID(xRequestID string) *GetLatestScheduledScanAllMetricsForbidden {
	o.XRequestID = xRequestID
	return o
}

// SetXRequestID sets the xRequestId to the get latest scheduled scan all metrics forbidden response
func (o *GetLatestScheduledScanAllMetricsForbidden) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WithPayload adds the payload to the get latest scheduled scan all metrics forbidden response
func (o *GetLatestScheduledScanAllMetricsForbidden) WithPayload(payload *models.Errors) *GetLatestScheduledScanAllMetricsForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get latest scheduled scan all metrics forbidden response
func (o *GetLatestScheduledScanAllMetricsForbidden) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetLatestScheduledScanAllMetricsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Request-Id

	xRequestID := o.XRequestID
	if xRequestID != "" {
		rw.Header().Set("X-Request-Id", xRequestID)
	}

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetLatestScheduledScanAllMetricsPreconditionFailedCode is the HTTP code returned for type GetLatestScheduledScanAllMetricsPreconditionFailed
const GetLatestScheduledScanAllMetricsPreconditionFailedCode int = 412

/*GetLatestScheduledScanAllMetricsPreconditionFailed Precondition failed

swagger:response getLatestScheduledScanAllMetricsPreconditionFailed
*/
type GetLatestScheduledScanAllMetricsPreconditionFailed struct {
	/*The ID of the corresponding request for the response

	 */
	XRequestID string `json:"X-Request-Id"`

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewGetLatestScheduledScanAllMetricsPreconditionFailed creates GetLatestScheduledScanAllMetricsPreconditionFailed with default headers values
func NewGetLatestScheduledScanAllMetricsPreconditionFailed() *GetLatestScheduledScanAllMetricsPreconditionFailed {

	return &GetLatestScheduledScanAllMetricsPreconditionFailed{}
}

// WithXRequestID adds the xRequestId to the get latest scheduled scan all metrics precondition failed response
func (o *GetLatestScheduledScanAllMetricsPreconditionFailed) WithXRequestID(xRequestID string) *GetLatestScheduledScanAllMetricsPreconditionFailed {
	o.XRequestID = xRequestID
	return o
}

// SetXRequestID sets the xRequestId to the get latest scheduled scan all metrics precondition failed response
func (o *GetLatestScheduledScanAllMetricsPreconditionFailed) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WithPayload adds the payload to the get latest scheduled scan all metrics precondition failed response
func (o *GetLatestScheduledScanAllMetricsPreconditionFailed) WithPayload(payload *models.Errors) *GetLatestScheduledScanAllMetricsPreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get latest scheduled scan all metrics precondition failed response
func (o *GetLatestScheduledScanAllMetricsPreconditionFailed) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetLatestScheduledScanAllMetricsPreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Request-Id

	xRequestID := o.XRequestID
	if xRequestID != "" {
		rw.Header().Set("X-Request-Id", xRequestID)
	}

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetLatestScheduledScanAllMetricsInternalServerErrorCode is the HTTP code returned for type GetLatestScheduledScanAllMetricsInternalServerError
const GetLatestScheduledScanAllMetricsInternalServerErrorCode int = 500

/*GetLatestScheduledScanAllMetricsInternalServerError Internal server error

swagger:response getLatestScheduledScanAllMetricsInternalServerError
*/
type GetLatestScheduledScanAllMetricsInternalServerError struct {
	/*The ID of the corresponding request for the response

	 */
	XRequestID string `json:"X-Request-Id"`

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewGetLatestScheduledScanAllMetricsInternalServerError creates GetLatestScheduledScanAllMetricsInternalServerError with default headers values
func NewGetLatestScheduledScanAllMetricsInternalServerError() *GetLatestScheduledScanAllMetricsInternalServerError {

	return &GetLatestScheduledScanAllMetricsInternalServerError{}
}

// WithXRequestID adds the xRequestId to the get latest scheduled scan all metrics internal server error response
func (o *GetLatestScheduledScanAllMetricsInternalServerError) WithXRequestID(xRequestID string) *GetLatestScheduledScanAllMetricsInternalServerError {
	o.XRequestID = xRequestID
	return o
}

// SetXRequestID sets the xRequestId to the get latest scheduled scan all metrics internal server error response
func (o *GetLatestScheduledScanAllMetricsInternalServerError) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WithPayload adds the payload to the get latest scheduled scan all metrics internal server error response
func (o *GetLatestScheduledScanAllMetricsInternalServerError) WithPayload(payload *models.Errors) *GetLatestScheduledScanAllMetricsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get latest scheduled scan all metrics internal server error response
func (o *GetLatestScheduledScanAllMetricsInternalServerError) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetLatestScheduledScanAllMetricsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Request-Id

	xRequestID := o.XRequestID
	if xRequestID != "" {
		rw.Header().Set("X-Request-Id", xRequestID)
	}

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
