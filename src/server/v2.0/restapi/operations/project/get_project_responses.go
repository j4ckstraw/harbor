// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/goharbor/harbor/src/server/v2.0/models"
)

// GetProjectOKCode is the HTTP code returned for type GetProjectOK
const GetProjectOKCode int = 200

/*GetProjectOK Return matched project information.

swagger:response getProjectOK
*/
type GetProjectOK struct {

	/*
	  In: Body
	*/
	Payload *models.Project `json:"body,omitempty"`
}

// NewGetProjectOK creates GetProjectOK with default headers values
func NewGetProjectOK() *GetProjectOK {

	return &GetProjectOK{}
}

// WithPayload adds the payload to the get project o k response
func (o *GetProjectOK) WithPayload(payload *models.Project) *GetProjectOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get project o k response
func (o *GetProjectOK) SetPayload(payload *models.Project) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetProjectOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetProjectUnauthorizedCode is the HTTP code returned for type GetProjectUnauthorized
const GetProjectUnauthorizedCode int = 401

/*GetProjectUnauthorized Unauthorized

swagger:response getProjectUnauthorized
*/
type GetProjectUnauthorized struct {
	/*The ID of the corresponding request for the response

	 */
	XRequestID string `json:"X-Request-Id"`

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewGetProjectUnauthorized creates GetProjectUnauthorized with default headers values
func NewGetProjectUnauthorized() *GetProjectUnauthorized {

	return &GetProjectUnauthorized{}
}

// WithXRequestID adds the xRequestId to the get project unauthorized response
func (o *GetProjectUnauthorized) WithXRequestID(xRequestID string) *GetProjectUnauthorized {
	o.XRequestID = xRequestID
	return o
}

// SetXRequestID sets the xRequestId to the get project unauthorized response
func (o *GetProjectUnauthorized) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WithPayload adds the payload to the get project unauthorized response
func (o *GetProjectUnauthorized) WithPayload(payload *models.Errors) *GetProjectUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get project unauthorized response
func (o *GetProjectUnauthorized) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetProjectUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Request-Id

	xRequestID := o.XRequestID
	if xRequestID != "" {
		rw.Header().Set("X-Request-Id", xRequestID)
	}

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetProjectInternalServerErrorCode is the HTTP code returned for type GetProjectInternalServerError
const GetProjectInternalServerErrorCode int = 500

/*GetProjectInternalServerError Internal server error

swagger:response getProjectInternalServerError
*/
type GetProjectInternalServerError struct {
	/*The ID of the corresponding request for the response

	 */
	XRequestID string `json:"X-Request-Id"`

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewGetProjectInternalServerError creates GetProjectInternalServerError with default headers values
func NewGetProjectInternalServerError() *GetProjectInternalServerError {

	return &GetProjectInternalServerError{}
}

// WithXRequestID adds the xRequestId to the get project internal server error response
func (o *GetProjectInternalServerError) WithXRequestID(xRequestID string) *GetProjectInternalServerError {
	o.XRequestID = xRequestID
	return o
}

// SetXRequestID sets the xRequestId to the get project internal server error response
func (o *GetProjectInternalServerError) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WithPayload adds the payload to the get project internal server error response
func (o *GetProjectInternalServerError) WithPayload(payload *models.Errors) *GetProjectInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get project internal server error response
func (o *GetProjectInternalServerError) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetProjectInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Request-Id

	xRequestID := o.XRequestID
	if xRequestID != "" {
		rw.Header().Set("X-Request-Id", xRequestID)
	}

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
