// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	"github.com/goharbor/harbor/src/server/v2.0/models"
)

// ListScannerCandidatesOfProjectOKCode is the HTTP code returned for type ListScannerCandidatesOfProjectOK
const ListScannerCandidatesOfProjectOKCode int = 200

/*ListScannerCandidatesOfProjectOK A list of scanner registrations.

swagger:response listScannerCandidatesOfProjectOK
*/
type ListScannerCandidatesOfProjectOK struct {
	/*Link to previous page and next page

	 */
	Link string `json:"Link"`
	/*The total count of available items

	 */
	XTotalCount int64 `json:"X-Total-Count"`

	/*
	  In: Body
	*/
	Payload []*models.ScannerRegistration `json:"body,omitempty"`
}

// NewListScannerCandidatesOfProjectOK creates ListScannerCandidatesOfProjectOK with default headers values
func NewListScannerCandidatesOfProjectOK() *ListScannerCandidatesOfProjectOK {

	return &ListScannerCandidatesOfProjectOK{}
}

// WithLink adds the link to the list scanner candidates of project o k response
func (o *ListScannerCandidatesOfProjectOK) WithLink(link string) *ListScannerCandidatesOfProjectOK {
	o.Link = link
	return o
}

// SetLink sets the link to the list scanner candidates of project o k response
func (o *ListScannerCandidatesOfProjectOK) SetLink(link string) {
	o.Link = link
}

// WithXTotalCount adds the xTotalCount to the list scanner candidates of project o k response
func (o *ListScannerCandidatesOfProjectOK) WithXTotalCount(xTotalCount int64) *ListScannerCandidatesOfProjectOK {
	o.XTotalCount = xTotalCount
	return o
}

// SetXTotalCount sets the xTotalCount to the list scanner candidates of project o k response
func (o *ListScannerCandidatesOfProjectOK) SetXTotalCount(xTotalCount int64) {
	o.XTotalCount = xTotalCount
}

// WithPayload adds the payload to the list scanner candidates of project o k response
func (o *ListScannerCandidatesOfProjectOK) WithPayload(payload []*models.ScannerRegistration) *ListScannerCandidatesOfProjectOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list scanner candidates of project o k response
func (o *ListScannerCandidatesOfProjectOK) SetPayload(payload []*models.ScannerRegistration) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListScannerCandidatesOfProjectOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Link

	link := o.Link
	if link != "" {
		rw.Header().Set("Link", link)
	}

	// response header X-Total-Count

	xTotalCount := swag.FormatInt64(o.XTotalCount)
	if xTotalCount != "" {
		rw.Header().Set("X-Total-Count", xTotalCount)
	}

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.ScannerRegistration, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ListScannerCandidatesOfProjectBadRequestCode is the HTTP code returned for type ListScannerCandidatesOfProjectBadRequest
const ListScannerCandidatesOfProjectBadRequestCode int = 400

/*ListScannerCandidatesOfProjectBadRequest Bad request

swagger:response listScannerCandidatesOfProjectBadRequest
*/
type ListScannerCandidatesOfProjectBadRequest struct {
	/*The ID of the corresponding request for the response

	 */
	XRequestID string `json:"X-Request-Id"`

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewListScannerCandidatesOfProjectBadRequest creates ListScannerCandidatesOfProjectBadRequest with default headers values
func NewListScannerCandidatesOfProjectBadRequest() *ListScannerCandidatesOfProjectBadRequest {

	return &ListScannerCandidatesOfProjectBadRequest{}
}

// WithXRequestID adds the xRequestId to the list scanner candidates of project bad request response
func (o *ListScannerCandidatesOfProjectBadRequest) WithXRequestID(xRequestID string) *ListScannerCandidatesOfProjectBadRequest {
	o.XRequestID = xRequestID
	return o
}

// SetXRequestID sets the xRequestId to the list scanner candidates of project bad request response
func (o *ListScannerCandidatesOfProjectBadRequest) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WithPayload adds the payload to the list scanner candidates of project bad request response
func (o *ListScannerCandidatesOfProjectBadRequest) WithPayload(payload *models.Errors) *ListScannerCandidatesOfProjectBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list scanner candidates of project bad request response
func (o *ListScannerCandidatesOfProjectBadRequest) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListScannerCandidatesOfProjectBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Request-Id

	xRequestID := o.XRequestID
	if xRequestID != "" {
		rw.Header().Set("X-Request-Id", xRequestID)
	}

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListScannerCandidatesOfProjectUnauthorizedCode is the HTTP code returned for type ListScannerCandidatesOfProjectUnauthorized
const ListScannerCandidatesOfProjectUnauthorizedCode int = 401

/*ListScannerCandidatesOfProjectUnauthorized Unauthorized

swagger:response listScannerCandidatesOfProjectUnauthorized
*/
type ListScannerCandidatesOfProjectUnauthorized struct {
	/*The ID of the corresponding request for the response

	 */
	XRequestID string `json:"X-Request-Id"`

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewListScannerCandidatesOfProjectUnauthorized creates ListScannerCandidatesOfProjectUnauthorized with default headers values
func NewListScannerCandidatesOfProjectUnauthorized() *ListScannerCandidatesOfProjectUnauthorized {

	return &ListScannerCandidatesOfProjectUnauthorized{}
}

// WithXRequestID adds the xRequestId to the list scanner candidates of project unauthorized response
func (o *ListScannerCandidatesOfProjectUnauthorized) WithXRequestID(xRequestID string) *ListScannerCandidatesOfProjectUnauthorized {
	o.XRequestID = xRequestID
	return o
}

// SetXRequestID sets the xRequestId to the list scanner candidates of project unauthorized response
func (o *ListScannerCandidatesOfProjectUnauthorized) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WithPayload adds the payload to the list scanner candidates of project unauthorized response
func (o *ListScannerCandidatesOfProjectUnauthorized) WithPayload(payload *models.Errors) *ListScannerCandidatesOfProjectUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list scanner candidates of project unauthorized response
func (o *ListScannerCandidatesOfProjectUnauthorized) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListScannerCandidatesOfProjectUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Request-Id

	xRequestID := o.XRequestID
	if xRequestID != "" {
		rw.Header().Set("X-Request-Id", xRequestID)
	}

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListScannerCandidatesOfProjectForbiddenCode is the HTTP code returned for type ListScannerCandidatesOfProjectForbidden
const ListScannerCandidatesOfProjectForbiddenCode int = 403

/*ListScannerCandidatesOfProjectForbidden Forbidden

swagger:response listScannerCandidatesOfProjectForbidden
*/
type ListScannerCandidatesOfProjectForbidden struct {
	/*The ID of the corresponding request for the response

	 */
	XRequestID string `json:"X-Request-Id"`

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewListScannerCandidatesOfProjectForbidden creates ListScannerCandidatesOfProjectForbidden with default headers values
func NewListScannerCandidatesOfProjectForbidden() *ListScannerCandidatesOfProjectForbidden {

	return &ListScannerCandidatesOfProjectForbidden{}
}

// WithXRequestID adds the xRequestId to the list scanner candidates of project forbidden response
func (o *ListScannerCandidatesOfProjectForbidden) WithXRequestID(xRequestID string) *ListScannerCandidatesOfProjectForbidden {
	o.XRequestID = xRequestID
	return o
}

// SetXRequestID sets the xRequestId to the list scanner candidates of project forbidden response
func (o *ListScannerCandidatesOfProjectForbidden) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WithPayload adds the payload to the list scanner candidates of project forbidden response
func (o *ListScannerCandidatesOfProjectForbidden) WithPayload(payload *models.Errors) *ListScannerCandidatesOfProjectForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list scanner candidates of project forbidden response
func (o *ListScannerCandidatesOfProjectForbidden) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListScannerCandidatesOfProjectForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Request-Id

	xRequestID := o.XRequestID
	if xRequestID != "" {
		rw.Header().Set("X-Request-Id", xRequestID)
	}

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListScannerCandidatesOfProjectInternalServerErrorCode is the HTTP code returned for type ListScannerCandidatesOfProjectInternalServerError
const ListScannerCandidatesOfProjectInternalServerErrorCode int = 500

/*ListScannerCandidatesOfProjectInternalServerError Internal server error

swagger:response listScannerCandidatesOfProjectInternalServerError
*/
type ListScannerCandidatesOfProjectInternalServerError struct {
	/*The ID of the corresponding request for the response

	 */
	XRequestID string `json:"X-Request-Id"`

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewListScannerCandidatesOfProjectInternalServerError creates ListScannerCandidatesOfProjectInternalServerError with default headers values
func NewListScannerCandidatesOfProjectInternalServerError() *ListScannerCandidatesOfProjectInternalServerError {

	return &ListScannerCandidatesOfProjectInternalServerError{}
}

// WithXRequestID adds the xRequestId to the list scanner candidates of project internal server error response
func (o *ListScannerCandidatesOfProjectInternalServerError) WithXRequestID(xRequestID string) *ListScannerCandidatesOfProjectInternalServerError {
	o.XRequestID = xRequestID
	return o
}

// SetXRequestID sets the xRequestId to the list scanner candidates of project internal server error response
func (o *ListScannerCandidatesOfProjectInternalServerError) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WithPayload adds the payload to the list scanner candidates of project internal server error response
func (o *ListScannerCandidatesOfProjectInternalServerError) WithPayload(payload *models.Errors) *ListScannerCandidatesOfProjectInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list scanner candidates of project internal server error response
func (o *ListScannerCandidatesOfProjectInternalServerError) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListScannerCandidatesOfProjectInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Request-Id

	xRequestID := o.XRequestID
	if xRequestID != "" {
		rw.Header().Set("X-Request-Id", xRequestID)
	}

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
