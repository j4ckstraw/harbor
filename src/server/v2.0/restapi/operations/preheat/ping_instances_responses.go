// Code generated by go-swagger; DO NOT EDIT.

package preheat

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/goharbor/harbor/src/server/v2.0/models"
)

// PingInstancesOKCode is the HTTP code returned for type PingInstancesOK
const PingInstancesOKCode int = 200

/*PingInstancesOK Success

swagger:response pingInstancesOK
*/
type PingInstancesOK struct {
	/*The ID of the corresponding request for the response

	 */
	XRequestID string `json:"X-Request-Id"`
}

// NewPingInstancesOK creates PingInstancesOK with default headers values
func NewPingInstancesOK() *PingInstancesOK {

	return &PingInstancesOK{}
}

// WithXRequestID adds the xRequestId to the ping instances o k response
func (o *PingInstancesOK) WithXRequestID(xRequestID string) *PingInstancesOK {
	o.XRequestID = xRequestID
	return o
}

// SetXRequestID sets the xRequestId to the ping instances o k response
func (o *PingInstancesOK) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WriteResponse to the client
func (o *PingInstancesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Request-Id

	xRequestID := o.XRequestID
	if xRequestID != "" {
		rw.Header().Set("X-Request-Id", xRequestID)
	}

	rw.Header().Del(runtime.HeaderContentType) // Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// PingInstancesBadRequestCode is the HTTP code returned for type PingInstancesBadRequest
const PingInstancesBadRequestCode int = 400

/*PingInstancesBadRequest Bad request

swagger:response pingInstancesBadRequest
*/
type PingInstancesBadRequest struct {
	/*The ID of the corresponding request for the response

	 */
	XRequestID string `json:"X-Request-Id"`

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewPingInstancesBadRequest creates PingInstancesBadRequest with default headers values
func NewPingInstancesBadRequest() *PingInstancesBadRequest {

	return &PingInstancesBadRequest{}
}

// WithXRequestID adds the xRequestId to the ping instances bad request response
func (o *PingInstancesBadRequest) WithXRequestID(xRequestID string) *PingInstancesBadRequest {
	o.XRequestID = xRequestID
	return o
}

// SetXRequestID sets the xRequestId to the ping instances bad request response
func (o *PingInstancesBadRequest) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WithPayload adds the payload to the ping instances bad request response
func (o *PingInstancesBadRequest) WithPayload(payload *models.Errors) *PingInstancesBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the ping instances bad request response
func (o *PingInstancesBadRequest) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PingInstancesBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Request-Id

	xRequestID := o.XRequestID
	if xRequestID != "" {
		rw.Header().Set("X-Request-Id", xRequestID)
	}

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PingInstancesUnauthorizedCode is the HTTP code returned for type PingInstancesUnauthorized
const PingInstancesUnauthorizedCode int = 401

/*PingInstancesUnauthorized Unauthorized

swagger:response pingInstancesUnauthorized
*/
type PingInstancesUnauthorized struct {
	/*The ID of the corresponding request for the response

	 */
	XRequestID string `json:"X-Request-Id"`

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewPingInstancesUnauthorized creates PingInstancesUnauthorized with default headers values
func NewPingInstancesUnauthorized() *PingInstancesUnauthorized {

	return &PingInstancesUnauthorized{}
}

// WithXRequestID adds the xRequestId to the ping instances unauthorized response
func (o *PingInstancesUnauthorized) WithXRequestID(xRequestID string) *PingInstancesUnauthorized {
	o.XRequestID = xRequestID
	return o
}

// SetXRequestID sets the xRequestId to the ping instances unauthorized response
func (o *PingInstancesUnauthorized) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WithPayload adds the payload to the ping instances unauthorized response
func (o *PingInstancesUnauthorized) WithPayload(payload *models.Errors) *PingInstancesUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the ping instances unauthorized response
func (o *PingInstancesUnauthorized) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PingInstancesUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Request-Id

	xRequestID := o.XRequestID
	if xRequestID != "" {
		rw.Header().Set("X-Request-Id", xRequestID)
	}

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PingInstancesNotFoundCode is the HTTP code returned for type PingInstancesNotFound
const PingInstancesNotFoundCode int = 404

/*PingInstancesNotFound Instance not found (when instance is provided by ID).

swagger:response pingInstancesNotFound
*/
type PingInstancesNotFound struct {
}

// NewPingInstancesNotFound creates PingInstancesNotFound with default headers values
func NewPingInstancesNotFound() *PingInstancesNotFound {

	return &PingInstancesNotFound{}
}

// WriteResponse to the client
func (o *PingInstancesNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) // Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

// PingInstancesInternalServerErrorCode is the HTTP code returned for type PingInstancesInternalServerError
const PingInstancesInternalServerErrorCode int = 500

/*PingInstancesInternalServerError Internal server error

swagger:response pingInstancesInternalServerError
*/
type PingInstancesInternalServerError struct {
	/*The ID of the corresponding request for the response

	 */
	XRequestID string `json:"X-Request-Id"`

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewPingInstancesInternalServerError creates PingInstancesInternalServerError with default headers values
func NewPingInstancesInternalServerError() *PingInstancesInternalServerError {

	return &PingInstancesInternalServerError{}
}

// WithXRequestID adds the xRequestId to the ping instances internal server error response
func (o *PingInstancesInternalServerError) WithXRequestID(xRequestID string) *PingInstancesInternalServerError {
	o.XRequestID = xRequestID
	return o
}

// SetXRequestID sets the xRequestId to the ping instances internal server error response
func (o *PingInstancesInternalServerError) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WithPayload adds the payload to the ping instances internal server error response
func (o *PingInstancesInternalServerError) WithPayload(payload *models.Errors) *PingInstancesInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the ping instances internal server error response
func (o *PingInstancesInternalServerError) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PingInstancesInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Request-Id

	xRequestID := o.XRequestID
	if xRequestID != "" {
		rw.Header().Set("X-Request-Id", xRequestID)
	}

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
