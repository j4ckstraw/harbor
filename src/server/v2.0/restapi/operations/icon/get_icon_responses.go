// Code generated by go-swagger; DO NOT EDIT.

package icon

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/goharbor/harbor/src/server/v2.0/models"
)

// GetIconOKCode is the HTTP code returned for type GetIconOK
const GetIconOKCode int = 200

/*GetIconOK Success

swagger:response getIconOK
*/
type GetIconOK struct {

	/*
	  In: Body
	*/
	Payload *models.Icon `json:"body,omitempty"`
}

// NewGetIconOK creates GetIconOK with default headers values
func NewGetIconOK() *GetIconOK {

	return &GetIconOK{}
}

// WithPayload adds the payload to the get icon o k response
func (o *GetIconOK) WithPayload(payload *models.Icon) *GetIconOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get icon o k response
func (o *GetIconOK) SetPayload(payload *models.Icon) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetIconOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetIconBadRequestCode is the HTTP code returned for type GetIconBadRequest
const GetIconBadRequestCode int = 400

/*GetIconBadRequest Bad request

swagger:response getIconBadRequest
*/
type GetIconBadRequest struct {
	/*The ID of the corresponding request for the response

	 */
	XRequestID string `json:"X-Request-Id"`

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewGetIconBadRequest creates GetIconBadRequest with default headers values
func NewGetIconBadRequest() *GetIconBadRequest {

	return &GetIconBadRequest{}
}

// WithXRequestID adds the xRequestId to the get icon bad request response
func (o *GetIconBadRequest) WithXRequestID(xRequestID string) *GetIconBadRequest {
	o.XRequestID = xRequestID
	return o
}

// SetXRequestID sets the xRequestId to the get icon bad request response
func (o *GetIconBadRequest) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WithPayload adds the payload to the get icon bad request response
func (o *GetIconBadRequest) WithPayload(payload *models.Errors) *GetIconBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get icon bad request response
func (o *GetIconBadRequest) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetIconBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Request-Id

	xRequestID := o.XRequestID
	if xRequestID != "" {
		rw.Header().Set("X-Request-Id", xRequestID)
	}

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetIconNotFoundCode is the HTTP code returned for type GetIconNotFound
const GetIconNotFoundCode int = 404

/*GetIconNotFound Not found

swagger:response getIconNotFound
*/
type GetIconNotFound struct {
	/*The ID of the corresponding request for the response

	 */
	XRequestID string `json:"X-Request-Id"`

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewGetIconNotFound creates GetIconNotFound with default headers values
func NewGetIconNotFound() *GetIconNotFound {

	return &GetIconNotFound{}
}

// WithXRequestID adds the xRequestId to the get icon not found response
func (o *GetIconNotFound) WithXRequestID(xRequestID string) *GetIconNotFound {
	o.XRequestID = xRequestID
	return o
}

// SetXRequestID sets the xRequestId to the get icon not found response
func (o *GetIconNotFound) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WithPayload adds the payload to the get icon not found response
func (o *GetIconNotFound) WithPayload(payload *models.Errors) *GetIconNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get icon not found response
func (o *GetIconNotFound) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetIconNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Request-Id

	xRequestID := o.XRequestID
	if xRequestID != "" {
		rw.Header().Set("X-Request-Id", xRequestID)
	}

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetIconInternalServerErrorCode is the HTTP code returned for type GetIconInternalServerError
const GetIconInternalServerErrorCode int = 500

/*GetIconInternalServerError Internal server error

swagger:response getIconInternalServerError
*/
type GetIconInternalServerError struct {
	/*The ID of the corresponding request for the response

	 */
	XRequestID string `json:"X-Request-Id"`

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewGetIconInternalServerError creates GetIconInternalServerError with default headers values
func NewGetIconInternalServerError() *GetIconInternalServerError {

	return &GetIconInternalServerError{}
}

// WithXRequestID adds the xRequestId to the get icon internal server error response
func (o *GetIconInternalServerError) WithXRequestID(xRequestID string) *GetIconInternalServerError {
	o.XRequestID = xRequestID
	return o
}

// SetXRequestID sets the xRequestId to the get icon internal server error response
func (o *GetIconInternalServerError) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WithPayload adds the payload to the get icon internal server error response
func (o *GetIconInternalServerError) WithPayload(payload *models.Errors) *GetIconInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get icon internal server error response
func (o *GetIconInternalServerError) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetIconInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Request-Id

	xRequestID := o.XRequestID
	if xRequestID != "" {
		rw.Header().Set("X-Request-Id", xRequestID)
	}

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
